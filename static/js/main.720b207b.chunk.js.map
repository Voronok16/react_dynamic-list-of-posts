{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["User","_ref","user","name","email","react_default","a","createElement","concat","address","city","street","suite","Comment","comment","body","CommentList","comments","map","components_Comment_Comment","key","id","Post","post","title","components_User_User","components_CommentList_CommentList","PostList","fullPosts","components_Post_Post","App","state","dataFromServer","isLoading","getList","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","res1","res2","res3","json","_ref3","_ref4","users","posts","_objectSpread","filter","postId","reduce","acc","defineProperty","userId","this","className","length","type","onClick","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yVA4BeA,MAxBf,SAAAC,GAAwB,IAARC,EAAQD,EAARC,KACNC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMJ,GACNE,EAAAC,EAAAC,cAAA,WAAMH,GACNC,EAAAC,EAAAC,cAAA,0BAAAC,OAEMN,EAAKO,QAAQC,KAFnB,iBAAAF,OAGMN,EAAKO,QAAQE,OAHnB,iBAAAH,OAIMN,EAAKO,QAAQG,MAJnB,uBCiBSC,MAxBf,SAAAZ,GAA8B,IAAXa,EAAWb,EAAXa,QACTX,EAAsBW,EAAtBX,KAAMC,EAAgBU,EAAhBV,MAAOW,EAASD,EAATC,KAErB,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAMQ,GACNV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIJ,GACJE,EAAAC,EAAAC,cAAA,SACGH,YCYIY,MApBf,SAAAf,GAAmC,IAAZgB,EAAYhB,EAAZgB,SACrB,OACEZ,EAAAC,EAAAC,cAAA,WACGU,EACEC,IAAI,SAAAJ,GAAO,OAAKT,EAAAC,EAAAC,cAACY,EAAD,CAASL,QAASA,EAASM,IAAKN,EAAQO,SCqBlDC,MAxBf,SAAArB,GAAwB,IAARsB,EAAQtB,EAARsB,KACNC,EAA0BD,EAA1BC,MAAOT,EAAmBQ,EAAnBR,KAAME,EAAaM,EAAbN,SAErB,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKiB,GACLnB,EAAAC,EAAAC,cAAA,SAAIQ,GACJV,EAAAC,EAAAC,cAACkB,EAAD,CAAMvB,KAAMqB,EAAKrB,QAGnBG,EAAAC,EAAAC,cAACmB,EAAD,CAAaT,SAAUA,MCTdU,SAJE,SAAA1B,GAAA,OAAAA,EAAG2B,UAA0BV,IAAI,SAAAK,GAAI,OACpDlB,EAAAC,EAAAC,cAACsB,EAAD,CAAMN,KAAMA,EAAMH,IAAKG,EAAKF,skBCoDfS,6MAnDbC,MAAQ,CACNC,eAAgB,GAChBC,WAAW,KAGbC,QAAU,WACRC,EAAKC,SAAS,CACZH,WAAW,IAEbI,QAAQC,IAAI,CACVC,MAAM,iDACNA,MAAM,8CACNA,MAAM,iDAELC,KAAK,SAAAvC,GAAA,IAAAwC,EAAAC,OAAAC,EAAA,EAAAD,CAAAzC,EAAA,GAAE2C,EAAFH,EAAA,GAAQI,EAARJ,EAAA,GAAcK,EAAdL,EAAA,UAAwBJ,QAAQC,IAAI,CAACM,EAAKG,OAAQF,EAAKE,OAAQD,EAAKC,WACzEP,KAAK,SAAAQ,GAAA,IAAAC,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAAE/B,EAAFgC,EAAA,GAAYC,EAAZD,EAAA,GAAmBE,EAAnBF,EAAA,UAA8Bd,EAAKC,SAAS,CAChDJ,eAAgBmB,EAAMjC,IAAI,SAAAK,GAAI,OAAA6B,EAAA,GACzB7B,EADyB,CAE5BN,SAAUA,EAASoC,OAAO,SAAAvC,GAAO,OAAIA,EAAQwC,SAAW/B,EAAKF,KAC7DnB,KAAMgD,EAAMK,OAAO,SAACC,EAAKtD,GAAN,OAAAkD,EAAA,GAAqBI,EAArBd,OAAAe,EAAA,EAAAf,CAAA,GAA2BxC,EAAKmB,GAAKnB,KAAS,IAAIqB,EAAKmC,YAE5EzB,WAAW,+EAKf,OAAI0B,KAAK5B,MAAME,UAEX5B,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,OACbvD,EAAAC,EAAAC,cAAA,yBAKmC,IAArCoD,KAAK5B,MAAMC,eAAe6B,OAE1BxD,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,OACbvD,EAAAC,EAAAC,cAAA,UAAQuD,KAAK,SAASC,QAASJ,KAAKzB,SAApC,iBAMJ7B,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,OACbvD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACyD,EAAD,CAAUpC,UAAW+B,KAAK5B,MAAMC,yBA9CtBiC,IAAMC,WCDxBC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.720b207b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <div>{name}</div>\n      <div>{email}</div>\n      <div>\n        {`\n          ${user.address.city},\n          ${user.address.street},\n          ${user.address.suite}\n        `}\n      </div>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.arrayOf({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.css';\n\nfunction Comment({ comment }) {\n  const { name, email, body } = comment;\n\n  return (\n    <div>\n      <div>{body}</div>\n      <div>\n        <p>{name}</p>\n        <p>\n          {email}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.arrayOf({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment/Comment';\nimport './CommentList.css';\n\nfunction CommentList({ comments }) {\n  return (\n    <div>\n      {comments\n        .map(comment => (<Comment comment={comment} key={comment.id} />))\n      }\n    </div>\n  );\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf({\n    comment: PropTypes.shape({\n      body: PropTypes.string,\n      email: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Post.css';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\n\nfunction Post({ post }) {\n  const { title, body, comments } = post;\n\n  return (\n    <div>\n      <div>\n        <h2>{title}</h2>\n        <p>{body}</p>\n        <User user={post.user} />\n      </div>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.arrayOf({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\nimport './PostList.css';\n\nconst PostList = ({ fullPosts }) => fullPosts.map(post => (\n  <Post post={post} key={post.id} />\n));\n\nexport default PostList;\n","import React from 'react';\nimport PostList from './components/PostList/PostList';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    dataFromServer: [],\n    isLoading: false,\n  }\n\n  getList = () => {\n    this.setState({\n      isLoading: true,\n    });\n    Promise.all([\n      fetch('https://jsonplaceholder.typicode.com/comments'),\n      fetch('https://jsonplaceholder.typicode.com/users'),\n      fetch(' https://jsonplaceholder.typicode.com/posts'),\n    ])\n      .then(([res1, res2, res3]) => Promise.all([res1.json(), res2.json(), res3.json()]))\n      .then(([comments, users, posts]) => this.setState({\n        dataFromServer: posts.map(post => ({\n          ...post,\n          comments: comments.filter(comment => comment.postId === post.id),\n          user: users.reduce((acc, user) => ({ ...acc, [user.id]: user }), {})[post.userId],\n        })),\n        isLoading: false,\n      }));\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div className=\"app\">\n          <p>Loading ...</p>\n        </div>\n      );\n    }\n\n    if (this.state.dataFromServer.length === 0) {\n      return (\n        <div className=\"app\">\n          <button type=\"button\" onClick={this.getList}> Show posts </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n        <h1>Static list of posts</h1>\n        <PostList fullPosts={this.state.dataFromServer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
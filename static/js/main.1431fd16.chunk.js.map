{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["User","_ref","user","name","email","react_default","a","createElement","concat","address","city","street","suite","Comment","comment","body","className","CommentList","comments","map","components_Comment_Comment","key","id","Post","post","title","components_User_User","components_CommentList_CommentList","PostList","fullPosts","components_Post_Post","COMMENTS_API_URL","USERS_API_URL","POSTS_API_URL","App","state","originalData","sortedData","users","usersToDisplay","inputtedName","isLoading","isReady","getList","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","res1","res2","res3","json","_ref3","_ref4","posts","_objectSpread","filter","postId","reduce","acc","defineProperty","userId","handleEnteredName","_ref5","target","value","toLowerCase","sortingDataByName","prevState","toConsumableArray","data","includes","showAllData","_this$state","this","type","onClick","length","person","onChange","placeholder","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1431fd16.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <div>{name}</div>\n      <div>{email}</div>\n      <div>\n        {`\n          ${user.address.city},\n          ${user.address.street},\n          ${user.address.suite}\n        `}\n      </div>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.css';\n\nfunction Comment({ comment }) {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"comment\">\n      <div>{body}</div>\n      <div>\n        <p>{name}</p>\n        <p>\n          {email}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment/Comment';\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comments\">\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))\n    }\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf({\n    comment: PropTypes.shape({\n      body: PropTypes.string,\n      email: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Post.css';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\n\nfunction Post({ post }) {\n  const { title, body, comments } = post;\n\n  return (\n    <div className=\"post\">\n      <div>\n        <h2>{title}</h2>\n        <p>{body}</p>\n        <User user={post.user} />\n      </div>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\nimport './PostList.css';\n\nconst PostList = ({ fullPosts }) => fullPosts.map(post => (\n  <Post post={post} key={post.id} />\n));\n\nexport default PostList;\n","import React from 'react';\nimport PostList from './components/PostList/PostList';\n\nimport './App.css';\n\nconst COMMENTS_API_URL = 'https://jsonplaceholder.typicode.com/comments';\nconst USERS_API_URL = 'https://jsonplaceholder.typicode.com/users';\nconst POSTS_API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nclass App extends React.Component {\n  state = {\n    originalData: [],\n    sortedData: [],\n    users: [],\n    usersToDisplay: [],\n    inputtedName: '',\n    isLoading: false,\n    isReady: true,\n  }\n\n  getList = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([\n      fetch(COMMENTS_API_URL),\n      fetch(USERS_API_URL),\n      fetch(POSTS_API_URL),\n    ])\n      .then(([res1, res2, res3]) => Promise.all([\n        res1.json(),\n        res2.json(),\n        res3.json(),\n      ]))\n      .then(([comments, users, posts]) => this.setState({\n        originalData: posts.map(post => ({\n          ...post,\n          comments: comments.filter(comment => comment.postId === post.id),\n          user: users.reduce((acc, user) => (\n            { ...acc, [user.id]: user }), {})[post.userId],\n        })),\n        sortedData: posts.map(post => ({\n          ...post,\n          comments: comments.filter(comment => comment.postId === post.id),\n          user: users.reduce((acc, user) => (\n            { ...acc, [user.id]: user }), {})[post.userId],\n        })),\n        users,\n        usersToDisplay: users,\n\n        isLoading: false,\n        isReady: false,\n      }));\n  };\n\n  handleEnteredName = ({ target }) => {\n    this.setState({\n      inputtedName: target.value.toLowerCase(),\n    });\n    this.sortingDataByName(target.value.toLowerCase());\n  }\n\n  sortingDataByName = (inputtedName) => {\n    this.setState(prevState => ({\n      sortedData: [...prevState.originalData].filter(data => (\n        data.user.name.toLowerCase().includes(inputtedName))),\n      usersToDisplay: [...prevState.users].filter(data => (\n        data.name.toLowerCase().includes(inputtedName))),\n    }));\n  }\n\n  showAllData = () => {\n    this.setState(prevState => ({\n      sortedData: [...prevState.originalData],\n      usersToDisplay: [...prevState.users],\n      inputtedName: '',\n    }));\n  }\n\n  render() {\n    const {\n      isLoading, isReady, sortedData, inputtedName, usersToDisplay,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"app\">\n          <p>Loading ...</p>\n        </div>\n      );\n    }\n\n    if (isReady) {\n      return (\n        <div className=\"app\">\n          <button type=\"button\" onClick={this.getList}> Show posts </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n        <h1>Dynamic list of posts</h1>\n        <p>\n          Posts:\n          {sortedData.length}\n        </p>\n        <h2>Posted users name: </h2>\n        {usersToDisplay.map(person => (\n          <b>\n            {person.name}\n            <br />\n          </b>\n        ))}\n        <input\n          onChange={this.handleEnteredName}\n          value={inputtedName}\n          placeholder=\" input user name\"\n        />\n        <br />\n        <button type=\"button\" onClick={this.showAllData}>Reset</button>\n        <PostList fullPosts={sortedData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}